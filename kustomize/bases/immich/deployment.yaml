---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: machine-learning
  labels:
    app.kubernetes.io/name: machine-learning
    app.kubernetes.io/component: machine-learning
    app.kubernetes.io/part-of: immich
    app.kubernetes.io/instance: immich-machine-learning
    app.kubernetes.io/version: v1.102.2
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: machine-learning
      app.kubernetes.io/instance: immich-machine-learning
  template:
    metadata:
      labels:
        app.kubernetes.io/name: machine-learning
        app.kubernetes.io/component: machine-learning
        app.kubernetes.io/part-of: immich
        app.kubernetes.io/instance: immich-machine-learning
        app.kubernetes.io/version: v1.102.2
    spec:
      containers:
        - name: machine-learning
          image: ghcr.io/immich-app/immich-machine-learning:v1.102.2
          env:
            - name: LOG_LEVEL
              value: verbose
            - name: DB_HOSTNAME
              value: postgres.immich
            - name: DB_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: config
                  key: POSTGRES_DB
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: config
                  key: POSTGRES_PASSWORD
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: config
                  key: POSTGRES_USER
            # These are settings for the machine learning Pod
            # - name: MACHINE_LEARNING_HOST
            #   value: 0.0.0.0
            - name: MACHINE_LEARNING_PORT
              value: "3003"
            # This is the url for accessing the machine learning service
            - name: IMMICH_MACHINE_LEARNING_URL
              value: http://machine-learning.immich:3003
            - name: REDIS_HOSTNAME
              value: redis.immich
            - name: REDIS_PORT
              value: "6379"
            - name: TRANSFORMERS_CACHE
              value: /cache
          # ports:
          #   - name: http
          #     containerPort: 3003
          volumeMounts:
            - name: cache
              mountPath: /cache
          livenessProbe:
            httpGet:
              path: /ping
              port: 3003
          readinessProbe:
            httpGet:
              path: /ping
              port: 3003
      volumes:
        - name: cache
          emptyDir:
            {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservices
  labels:
    app.kubernetes.io/name: microservices
    app.kubernetes.io/component: microservices
    app.kubernetes.io/part-of: immich
    app.kubernetes.io/instance: immich-microservices
    app.kubernetes.io/version: v1.102.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: microservices
      app.kubernetes.io/instance: immich-microservices
  template:
    metadata:
      labels:
        app.kubernetes.io/name: microservices
        app.kubernetes.io/component: microservices
        app.kubernetes.io/part-of: immich
        app.kubernetes.io/instance: immich-microservices
        app.kubernetes.io/version: v1.102.2
    spec:
      containers:
        - name: microservices
          image: ghcr.io/immich-app/immich-server:v1.102.2
          imagePullPolicy: IfNotPresent
          command:
            - "/bin/sh"
          args:
            - ./start-microservices.sh
          env:
            - name: LOG_LEVEL
              value: verbose
            - name: DB_HOSTNAME
              value: postgres.immich
            - name: DB_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: config
                  key: POSTGRES_DB
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: config
                  key: POSTGRES_PASSWORD
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: config
                  key: POSTGRES_USER
            # These are settings for the machine learning Pod
            # - name: MACHINE_LEARNING_HOST
            #   value: 0.0.0.0
            - name: MACHINE_LEARNING_PORT
              value: "3003"
            # This is the url for accessing the machine learning service
            - name: IMMICH_MACHINE_LEARNING_URL
              value: http://machine-learning.immich:3003
            - name: REDIS_HOSTNAME
              value: redis.immich
            - name: REDIS_PORT
              value: "6379"
          volumeMounts:
            - name: storage
              mountPath: /usr/src/app/upload
            - mountPath: /external
              name: external
      volumes:
        - name: storage
          persistentVolumeClaim:
            # The claim made by Immich stateful set
            claimName: storage-immich-0
        # External library shared via nfs
        - name: external
          nfs:
            path: /srv/nfs/usb/photos
            readOnly: true
            server: nuc-01.internal
