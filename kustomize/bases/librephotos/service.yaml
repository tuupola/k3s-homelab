apiVersion: v1
kind: Service
metadata:
  name: frontend
  # These are not needed by considered a good practice
  labels:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: librephotos
    app.kubernetes.io/instance: librephotos-frontend
    app.kubernetes.io/version: "2024w14p1"
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/instance: librephotos-frontend
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  # These are not needed by considered a good practice
  labels:
    app.kubernetes.io/name: backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: librephotos
    app.kubernetes.io/instance: librephotos-backend
    app.kubernetes.io/version: "2024w14p1"
spec:
  type: ClusterIP
  ports:
    - port: 8001
      targetPort: 8001
  selector:
    app.kubernetes.io/name: backend
    app.kubernetes.io/component: backend
    app.kubernetes.io/instance: librephotos-backend
---
apiVersion: v1
kind: Service
metadata:
  name: proxy
  # These are not needed by considered a good practice
  labels:
    app.kubernetes.io/name: backend
    app.kubernetes.io/component: proxy
    app.kubernetes.io/part-of: librephotos
    app.kubernetes.io/instance: librephotos-proxy
    app.kubernetes.io/version: "2024w14p1"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
  selector:
    app.kubernetes.io/name: proxy
    app.kubernetes.io/component: proxy
    app.kubernetes.io/instance: librephotos-proxy
